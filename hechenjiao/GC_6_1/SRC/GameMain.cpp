//======================================================================================//
//
//							ゲームプログラム
//
//======================================================================================//
#include		<windows.h>
#include		<stdio.h>
#include		<math.h>
#include		"MASTER/Ci-Lib.H"
#include		"Game.H"

//****************************************************************************
//	■	定義
//
//****************************************************************************
#define		CHR_W	128
#define		CHR_H	128

//****************************************************************************
//	■	内部使用　変数
//
//****************************************************************************
GsTEXTURE	TEX_1;
GsTEXTURE	TEX_2;

float		Px1, Py1;		// OBJ1の現在位置
float		Dx1, Dy1;		// OBJ1の移動量（ｘ、ｙ）
float		masatu;			// 摩擦係数
float		press;			// 重力値

short		Flg1;			// ONだったらOBJ1を描画

short		Cnt1;			// カウンター

//--------------------------------------------------------------------------//
//	●	初期化		：シーンに移る時一回、変数の初期化
//
//--------------------------------------------------------------------------//
void	GameInit(void)
{
	// 赤ドラの初期位置
	Px1 = 320;
	Py1 = 400;

	Flg1 = ON;		// ON
	Cnt1 = 0;

	// 等速　加速　減速


	// 移動量を決定
	Dx1 = 0.0f;
	Dy1 = -20.0f;

	masatu	= -0.25f;
	press = 0.85f;

}

//--------------------------------------------------------------------------//
//	●	内部処理	：シーン中の処理、現在のシーンで行う処理
//
//--------------------------------------------------------------------------//

// 移動量（スピード）を上げる
//	Dx1 = Dx1 + 1.18f;

// 移動量（スピード）を下げる
//	Dx1 = Dx1 + masatu;

// 移動量がマイナス（左に行く）になったら
//	if (Dx1 < 0) {
// 移動量を0にする（オブジェクトを止める）
//		Dx1 = 0;
//	}



// ゲームメインループ
void	GameLoop(void)
{

	DEB_TEXT("カウンターは？%d", Cnt1);

	// ジャンプ処理（初速に重力をかけ続ける
	Dy1 = Dy1 + press;

	// 地面に到着したら
	if (Py1 > 400) {
		// 地面で止まる
		Py1 = 400;		// 補正
		Dy1 = 0.0f;
	}


	// 座標更新（現在位置＝1つ前の位置＋移動量）
	Px1 = Px1 + Dx1;
	Py1 = Py1 + Dy1;

}

//--------------------------------------------------------------------------//
//	●	描画		：シーン中の描画、現在のシーンで表示するBMPはここで
//
//--------------------------------------------------------------------------//
// ゲーム画面　描画
void	GameDraw(void)
{
	// 背景
	Gs_DrawLayer(320, 240, TEX_1, 0, 0, 512, 256, OFF, ARGB(255, 255, 255, 255), ON, 0, (640.0f/512.0f), (480.0f/256.0f));

	// 赤ドラゴン
	if (Flg1 == ON) {
		Gs_DrawLayer(I(Px1), I(Py1), TEX_2, 0, 0, CHR_W, CHR_H, OFF, ARGB(255, 255, 255, 255), ON, 0, 1.0f, 1.0f);
	}

}

//--------------------------------------------------------------------------//
//	●	ロード		：シーンに入る時、そのシーンで必要なデータの読み込み
//
//--------------------------------------------------------------------------//
short	GameLoad(void)
{
	TEX_1 = Gs_LoadBMP("DATA/BMP/BG_02.PNG");
	TEX_2 = Gs_LoadBMP("DATA/BMP/Obj_10.PNG");
	return		GAME_SCENE;
}

//--------------------------------------------------------------------------//
//	●	後処理		：現在のシーンから抜ける時、データの破棄
//
//--------------------------------------------------------------------------//
void	GameExit(void)
{
	Gs_ReleaseBMP(TEX_1);
	Gs_ReleaseBMP(TEX_2);

}

//****************************************************************************
//	★　シーンテーブル：各シーンで呼び出される関数の登録
//****************************************************************************

SCENE_TBL	GameSceneTbl = {
		GameLoad,
		GameInit,
		GameLoop,
		GameDraw,
		GameExit
};

//======================================================================================//
//							EOP															//
//======================================================================================//
